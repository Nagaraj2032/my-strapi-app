name: Deploy Strapi on EC2 using Terraform

on:
  workflow_dispatch:
  push:
    branches:
      - nagaraj

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      # OPTIONAL: Try downloading artifact if it exists
      - name: Try download image tag artifact
        id: artifact
        continue-on-error: true
        uses: actions/download-artifact@v4
        with:
          name: image_tag

      - name: Set Docker Image Tag
        id: get_tag
        run: |
          if [ -f image_tag.txt ]; then
            echo "tag=$(cat image_tag.txt)" >> $GITHUB_OUTPUT
          else
            echo "No image_tag.txt found. Using latest tag."
            echo "tag=latest" >> $GITHUB_OUTPUT
          fi

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v3

      - name: Terraform Init
        run: terraform init
        working-directory: terraform

      - name: Terraform Validate
        run: terraform validate
        working-directory: terraform

       - name: Terraform Plan
  run: >
    terraform -chdir=terraform plan
    -var="image_tag=${{ steps.get_tag.outputs.tag }}"
    -var="docker_username=${{ secrets.DOCKER_USERNAME }}"
    -var="docker_password=${{ secrets.DOCKER_PASSWORD }}"
    -var="ami=${{ secrets.AMI_ID }}"
    -var="subnet_id=${{ secrets.SUBNET_ID }}"
    -var="security_group_id=${{ secrets.SECURITY_GROUP_ID }}"
    -var="key_name=${{ secrets.KEY_NAME }}"

- name: Terraform Apply
  run: >
    terraform -chdir=terraform apply -auto-approve
    -var="image_tag=${{ steps.get_tag.outputs.tag }}"
    -var="docker_username=${{ secrets.DOCKER_USERNAME }}"
    -var="docker_password=${{ secrets.DOCKER_PASSWORD }}"
    -var="ami=${{ secrets.AMI_ID }}"
    -var="subnet_id=${{ secrets.SUBNET_ID }}"
    -var="security_group_id=${{ secrets.SECURITY_GROUP_ID }}"
    -var="key_name=${{ secrets.KEY_NAME }}"

